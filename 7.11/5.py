# Объявите функцию, которая принимает строку на кириллице и преобразовывает ее в латиницу,
# используя следующий словарь для замены русских букв на соответствующее латинское написание:
# t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
#      'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
#      'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
#      'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
# Функция должна возвращать преобразованную строку.
# Замены делать без учета регистра (исходную строку перевести в нижний регистр - малые буквы).
# Все небуквенные символы ": ;.,_" превращать в символ '-' (дефиса).
#
# Определите декоратор для этой функции, который несколько подряд идущих дефисов, превращает в один дефис.
# Полученная строка должна возвращаться при вызове декоратора. (Сам декоратор на экран ничего выводить не должен).
# Примените декоратор к первой функции и вызовите ее для введенной строки s на кириллице:
# s = input()
# Результат работы декорированной функции отобразите на экране.
# Sample Input:
# Python - это круто!
# Sample Output:
# python-eto-kruto!

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# здесь продолжайте программу
s = input().lower()

def strip_double_dash(func):
    def wrapper(*args, **kwargs):
        res = func(*args, **kwargs)
        while '--' in res:
            res = res.replace('--', '-')
        return res
    return wrapper


@strip_double_dash
def convert_rus_to_en(str, new_str=''):
    for i in str:
        if i in [':', ' ', ';', '.', '_']:
            new_str += '-'
        elif i in t.keys():
            new_str += t[i]
        else:
            new_str += i
    return new_str

print(convert_rus_to_en(s))