# Мы с вами в заданиях несколько раз генерировали последовательность чисел Фибоначчи,
# которая строится по правилу: каждое последующее число равно сумме двух предыдущих.
# Для разнообразия давайте будем генерировать каждое последующее как сумму трех предыдущих чисел.
# При этом первые три числа равны 1 и имеем такую последовательность:
# 1, 1, 1, 3, 5, 9, 17, 31, 57, ...
# Не знаю, есть ли у нее название, поэтому, в рамках уроков, я скромно назову ее последовательностью Балакирева.
# Итак, на вход программы поступает натуральное число N (N > 5) и необходимо определить функцию-генератор, которая бы возвращала
# N первых чисел последовательности Балакирева (включая первые три единицы).
# Реализуйте эту функцию без использования коллекций (списков, кортежей, словарей и т.п.).
# Вызовите ее N раз для получения N чисел и выведите полученные числа на экран в одну строчку через пробел.
# Sample Input:
# 7
# Sample Output:
# 1 1 1 3 5 9 17

N = int(input())


def gen_func(N):
    lst = []
    last = 0
    for i in range(0, N):
        if i < 3:
            lst.append(1)
            yield lst[last]
        else:
            sum = lst[i-1] + lst[i-2] + lst[i-3]
            lst.append(sum)
            yield sum


a = gen_func(N)

for i in a:
    print(i, end=' ')